#! /usr/bin/env ruby

require 'rubygems'
require 'net/scp'
class Sod
  def self.provision(ip_address, repo_user, repo_name, password=nil)
    unless password
      puts "need password"
      password = $stdin.gets
    end
    Net::SSH.start(ip_address, "root", :password => password.strip) { |connection| bootstrap(connection, repo_user, repo_name) }
  end

  def self.bootstrap(connection, repo_user, repo_name)
    install_build_essential! connection
    install_rvm!(connection)
    clone_repo!(connection, repo_user, repo_name)
    chef_bootstrap!(connection, repo_name)
    app_bootstrap(connection, repo_name)
  end

  def self.chef_bootstrap!(connection, repo_name)
    puts connection.exec! "mkdir -p /etc/chef && echo 'cookbook_path \"usr/local/app/#{repo_name}/chef/cookbooks\"' > /etc/chef/solo.rb"
    install_chef(connection)
    puts bootstrap_ruby_gem_command! connection, "chef-solo -j /usr/local/app/#{repo_name}/chef/cookbooks/centos/bootstrap.json"
  end

  def self.app_bootstrap(connection, repo_name)
    #At this point we assume you have set up ruby in a way that works on the machine
    #how you want it to work, and we can just use it.
    puts connection.exec! "cd /usr/local/app/#{repo_name} && bundle install"
    puts connection.exec! "cd /usr/local/app/#{repo_name} && chef-solo -j /usr/local/app/#{repo_name}/chef/cookbooks/centos/main.json"
  end

  def self.install_rvm!(connection)
    puts "installing rvm"
    scp = Net::SCP.new connection
    scp.upload! File.join(File.dirname(__FILE__), "rvm_install.sh"), "/root/"
    puts connection.exec! "bash /root/rvm_install.sh"
    puts connection.exec! "rvm package install zlib"
    puts connection.exec! "rvm package install openssl"
    puts connection.exec! "rvm package install readline"
    puts connection.exec! "rvm install 1.8.7-p302 -C --with-zlib-dir=/usr/local/rvm/usr --with-readline-dir=/usr/local/rvm/usr --with-openssl-dir=/usr/local/rvm/usr"
    puts 'setting /etc/bashrc'
    puts connection.exec! %{grep -q rvm /etc/bashrc || echo '[[ -s "/usr/local/lib/rvm" ]] && . "/usr/local/lib/rvm"' >> /etc/bashrc}
  end
  def self.install_chef(connection)
    puts "installing bundler"
    puts bootstrap_ruby_command! connection, "gem install bundler"
    puts connection.exec! "mkdir -p /chef"
    puts "uploading Gemfile for chef"
    scp = Net::SCP.new connection
    scp.upload File.join(File.dirname(__FILE__), "chef_Gemfile"), "/chef/Gemfile"
    puts bootstrap_ruby_gem_command! connection, "bundle install --gemfile=/chef/Gemfile"
  end

  def self.bootstrap_ruby_command!(connection, string, options = {})
    command = "#{bootstrap_ruby_bin_path}/ruby #{bootstrap_ruby_bin_path}/#{string}"
    command = "cd #{options[:directory]} && " + command if options[:directory]
    puts "executing " + command
    puts connection.exec! command
  end

  def self.bootstrap_ruby_gem_command!(connection, string, options = {})
    command = "#{bootstrap_ruby_bin_path}/ruby #{bootstrap_ruby_gem_path}/#{string}"
    command = "cd #{options[:directory]} && " + command if options[:directory]
    puts "executing " + command
    puts connection.exec! command
  end

  def self.bootstrap_ruby_bin_path
    "/usr/local/rvm/rubies/ruby-1.8.7-p302/bin"
  end

  def self.bootstrap_ruby_gem_path
    "/usr/local/rvm/gems/ruby-1.8.7-p302/bin"
  end

  def self.install_build_essential!(connection)
    puts "Installing git and c"
    puts connection.exec! 'rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm'
    puts connection.exec! "yum -y install git gcc automake autoconf libtool make"
  end

  def self.clone_repo!(connection, repo_user, repo_name)
    root_repo_path = '/usr/local/app/'
    puts connection.exec! "mkdir -p #{root_repo_path}"
    puts connection.exec! "cd #{root_repo_path} && git clone git://github.com/#{repo_user}/#{repo_name}.git || true"
    puts connection.exec! "cd #{root_repo_path}/#{repo_name} && git pull origin master"
  end
end

puts "need an ip address, github user, and repo name" unless ARGV[2]
Sod.provision ARGV[0], ARGV[1], ARGV[2], ARGV[3]
